use supermarket;
Go

SELECT *
FROM
sales.sales;

WITH duplicates AS (
    SELECT
        *,
        ROW_NUMBER() OVER (
            PARTITION BY sale_id, branch, city, customer_type, gender, product_name, product_category, unit_price, quantity, tax, total_price, reward_points 
            ORDER BY sale_id
        ) AS duplicates
    FROM sales.sales
)
SELECT*
 FROM duplicates
WHERE duplicates> 1;



-- What is the total revenue generated by the supermarket?
SELECT 
CONCAT('$ ',ROUND(SUM(total_price) ,2))  AS Total_Rev
FROM
sales.sales
-- What are the sales by branch (New York, Chicago, Los Angeles)?

SELECT 
branch,
city,
ROUND(SUM(total_price),2)AS Total_Rev
FROM
sales.sales
GROUP BY branch,city

-- 3. What is the average total price per sale in each branch?
SELECT 
branch,
city,
ROUND(AVG(total_price),2)AS Total_Rev
FROM
sales.sales
GROUP BY branch,city
-- 4. Which branch has the highest total revenue?
SELECT branch, 
ROUND(SUM(total_price),2) AS TotalRevenue
FROM sales.sales
GROUP BY branch
ORDER BY TotalRevenue DESC;

-- What is the average quantity sold per transaction in each branch?

SELECT branch, 
ROUND(AVG(quantity),5) AS AVG_Qua
FROM sales.sales
GROUP BY branch
ORDER BY AVG_Qua DESC;

-- Which product category contributes the most revenue
SELECT product_category, 
ROUND(SUM(total_price),2) AS TotalRevenue
FROM sales.sales
GROUP BY product_category
ORDER BY TotalRevenue DESC;

-- Which product has the highest total sales (quantity and revenue)?
SELECT
product_name,
ROUND(SUM(quantity),2) As TotalQuanity,
ROUND(SUM(total_price),2) AS TotalRevenue
FROM sales.sales
GROUP BY product_name
ORDER BY TotalQuanity DESC,TotalRevenue DESC

-- What is the average unit price across all products?

SELECT
product_name,
ROUND(AVG(unit_price),3) AS AvgUnitPrice
FROM sales.sales
GROUP BY product_name

-- 2. ## Customer Analysis
-- 1. What is the distribution of customer types (Members vs. Normal) across branches?
SELECT 
customer_type,
COUNT (customer_type) Customers
FROM sales.sales
GROUP BY customer_type
ORDER BY  Customers DESC

-- 2. How much revenue is generated by Members vs. Normal customers?
SELECT
customer_type,
ROUND(SUM(total_price),2) as Revenue
FROM sales.sales
GROUP BY customer_type
ORDER BY  Revenue DESC

--  What is the average spend per transaction for Members compared to Normal customers?
SELECT
customer_type,
ROUND(AVG(total_price),2) as AVG_Revenue
FROM sales.sales
GROUP BY customer_type
ORDER BY  AVG_Revenue DESC

-- How does customer type (Members/Normal) vary by branch?
SELECT
branch, 
customer_type,
COUNT(customer_type) Customers
FROM sales.sales
GROUP BY customer_type,branch

-- What percentage of total sales comes from members?

SELECT
customer_type,
ROUND(SUM(total_price),2) AS Revenue,
CONCAT(ROUND((SUM(total_price)*100  /(SELECT SUM(total_price) FROM sales.sales) ),3),'%')  AS SalesPercentage
FROM sales.sales
GROUP BY customer_type


-- What is the average quantity sold per transaction for Members vs. Normal customers?
SELECT
customer_type,
AVG(Quantity) AS AvgQuantityPerTransaction
FROM sales.sales
GROUP BY customer_type

-- 7.Which branch has the highest number of Member customers?

SELECT
customer_type,
COUNT(customer_type) customers
FROM sales.sales
GROUP BY customer_type
ORDER BY customers DESC


-- How does gender affect customer spending?

SELECT
customer_type,
gender,
product_category,
ROUND(SUM(total_price),2) Revenue,
ROUND(AVG(total_price),2) AVGRevenue
FROM sales.sales
GROUP BY gender,customer_type,product_category 
ORDER BY gender DESC,customer_type DESC 

-- 9.What is the revenue breakdown by gender for each branch?

SELECT
customer_type,
gender,
product_category,
ROUND(SUM(total_price),2) Revenue,
ROUND(AVG(total_price),2) AVGRevenue
FROM sales.sales
GROUP BY gender,customer_type,product_category 
ORDER BY gender DESC,customer_type DESC 

-- .What is the most popular product category among each customer type?


WITH productCategory AS(
    SELECT
    customer_type,
    product_category,
    SUM(quantity) as TotalQuanity,
    ROW_NUMBER() OVER(PARTITION BY customer_type ORDER BY SUM(quantity) DESC) AS Rank
    FROM sales.sales
    GROUP BY customer_type,product_category
)
SELECT 
customer_type,
product_category AS MostPorpularCategory,
Rank 
FROM productCategory 
WHERE Rank = 1;


--  Product Performance
-- What are the top 5 products by total sales revenue?

SELECT TOP 5
    product_name,
    ROUND(SUM(total_price),3) AS Revenue
FROM sales.sales
GROUP BY product_name
ORDER BY Revenue DESC

-- What are the bottom 5 products by total sales revenue?
SELECT TOP 5
    product_name,
    ROUND(SUM(total_price),3) AS Revenue
FROM sales.sales
GROUP BY product_name
ORDER BY Revenue ASC

-- What are the top product categories by total revenue?

SELECT TOP 5
    product_category,
    ROUND(SUM(total_price),3) AS Revenue
FROM sales.sales
GROUP BY product_category
ORDER BY Revenue DESC

-- What is the average unit price for each product category?
SELECT TOP 5
    product_category,
    ROUND(AVG(total_price),3) AS Revenue_Avg
FROM sales.sales
GROUP BY product_category
ORDER BY Revenue_Avg DESC

-- What product or product category has the highest quantity sold?

WITH ProductRank AS (

    SELECT
    product_name,
    ROW_NUMBER() OVER(PARTITION BY product_name
     ORDER BY SUM( quantity) DESC) AS Rank
    FROM sales.sales
    GROUP BY product_name
),
Productcategory AS(
   SELECT
    
    product_category,
    ROW_NUMBER() OVER(PARTITION BY product_category
     ORDER BY SUM( quantity) DESC) AS RankCategory
    FROM sales.sales
    GROUP BY product_category 
)

SELECT 
product_name
FROM ProductRank
WHERE Rank = 1
UNION ALL
SELECT 
product_category
FROM Productcategory
WHERE RankCategory = 1


-- What is the distribution of product sales across branches?

SELECT
product_name,
branch,
ROUND(SUM(quantity),2)  AS TotalQuantitySold,
ROUND(SUM(total_price),2) AS Revenue
FROM sales.sales
GROUP BY product_name,branch
ORDER BY product_name

-- Are there specific products that are popular in one branch but not in others?

WITH productSales AS
(
    SELECT
    branch, 
    product_name,
    SUM(total_price) AS productSold
    FROM sales.sales
    GROUP BY branch,product_name
)
SELECT
    branch, 
    product_name,
    productSold
FROM productSales
WHERE productSold > 0
AND  product_name IN
(
    SELECT 
    product_name
    FROM productSales
    GROUP BY product_name
    HAVING COUNT (DISTINCT branch) = 1
)
ORDER BY product_name, productSold DESC;

-- What is the average total price after tax for each product category?
SELECT
product_category,
ROUND(AVG(total_price),3) AvgAfterTax
FROM sales.sales
GROUP BY product_category

-- 4. Reward Points Analysis
-- What is the total number of reward points earned by Members?
SELECT
customer_type,
ROUND(SUM(reward_points),3) RewardPoints
FROM sales.sales
GROUP BY customer_type

-- Which branch awarded the most reward points?
SELECT
branch,
ROUND(SUM(reward_points),3) RewardPoints
FROM sales.sales
GROUP BY branch
ORDER BY RewardPoints DESC
-- What is the average reward points earned per transaction for Members?
SELECT
customer_type,
ROUND(AVG(reward_points),3) AVGRewardPoints
FROM sales.sales
GROUP BY customer_type;

-- Which product category or product generates the highest reward points for Members?
-- product category
WITH productranking AS (
    SELECT 
       
        product_name,
        ROUND(SUM(reward_points), 3) AS RewardPoints,
        ROW_NUMBER() OVER( ORDER BY SUM(reward_points) DESC) AS Rank
    FROM sales.sales
    GROUP BY  product_name
)
SELECT
    product_name,
    RewardPoints
FROM productranking
WHERE Rank = 1;


WITH productcategoryranking AS (
    SELECT 
        product_category,
        ROUND(SUM(reward_points), 3) AS RewardPoints,
        ROW_NUMBER() OVER( ORDER BY SUM(reward_points) DESC) AS Rank
    FROM sales.sales
    GROUP BY product_category
)
SELECT
    product_category,
    RewardPoints,
    Rank
FROM productcategoryranking 
 WHERE Rank = 1;


-- How does reward point generation correlate with revenue?

SELECT 
    product_category,
    SUM(reward_points) AS TotalRewardPoints,
    ROUND(SUM(total_price),2) AS TotalRevenue
FROM sales.sales
GROUP BY product_category;

-- percentage of total revenue comes from reward point-generating transactions?

WITH RewardRevenuePercent AS(
    SELECT
    ROUND(SUM( CASE WHEN reward_points >= 1 THEN total_price ELSE 0 END ),2)  AS RewardRevenue,
    ROUND(SUM(total_price),2)  As TotalRevenue
    FROM sales.sales
)
SELECT
RewardRevenue,
TotalRevenue,
CASE
 WHEN RewardRevenue = 0 THEN 0
 ELSE ROUND((RewardRevenue* 100)/TotalRevenue,2)   END AS PercentTotalRevenue

FROM RewardRevenuePercent


-- What is the gender distribution of customers across all branches?
SELECT
branch,
gender,
COUNT(gender) as GenderDistribution
FROM
sales.sales
GROUP BY branch ,gender
ORDER BY branch ;


-- Which gender generates the most revenue?
SELECT
gender,
ROUND(SUM(total_price),2) AS TotalRevenue
FROM
sales.sales
GROUP BY gender
ORDER BY TotalRevenue DESC ;

-- How does gender impact average spending per transaction?

SELECT
gender,
COUNT(sale_id) AS TotalOrders,
ROUND(SUM(total_price),2)  AS TotalSpending,
ROUND(AVG(total_price),2)  AS AverageSpending
FROM sales.sales
GROUP BY gender

-- .Which product categories are most popular among male vs. female customers?
SELECT
gender,
product_category,
COUNT(sale_id) AS TotalOrders
FROM sales.sales
GROUP BY gender,product_category
ORDER BY TotalOrders DESC

-- What is the average quantity purchased by male and female customers?
SELECT
gender,
ROUND(AVG(total_price),2) Avg_Price
FROM sales.sales
GROUP BY gender
ORDER BY Avg_Price DESC

-- What is the total sales tax collected across all branches?

SELECT
ROUND(SUM(tax),2) TotalTax
FROM sales.sales

-- Which branch collects the highest total sales tax?

SELECT
branch,
ROUND(SUM(tax),2) TotalTax
FROM sales.sales
GROUP BY branch

-- What is the average tax amount per transaction?

SELECT
ROUND(AVG(tax),2) TotalAverageTax
FROM sales.sales

-- How does the unit price vary across product categories?

SELECT
product_category,
ROUND(AVG(unit_price),2) AverageUnitPrice,
ROUND(MIN(unit_price),2) MinUnitPrice,
ROUND(MAX(unit_price),2) MaxUnitPrice
FROM sales.sales
GROUP BY product_category

-- Which product categories have the highest post-tax total price?
SELECT
product_category,
ROUND(SUM(unit_price * (1+tax)) ,2) AS TotalPostTax
FROM sales.sales
GROUP BY product_category
ORDER BY TotalPostTax DESC

-- Which branch has the highest average transaction value?

SELECT
branch,
ROUND(AVG(total_price),2) AveragePrice
FROM sales.sales
GROUP BY branch
ORDER BY AveragePrice DESC

-- Which branch has the most transactions?
SELECT
branch,
COUNT(sale_id) AS TotalTransaction
FROM sales.sales
GROUP BY branch
ORDER BY TotalTransaction DESC

-- What are the top-selling products in each branch?
WITH ProductSales AS(
    SELECT
    branch,
    product_name,
    SUM(quantity * unit_price) as TotalRevenue
    FROM sales.sales
    GROUP BY branch,product_name
),RankedProduct AS (
    SELECT
    branch,
    product_name,
    TotalRevenue,
    RANK() OVER (PARTITION BY branch ORDER BY TotalRevenue DESC) AS SaleRank
    FROM ProductSales
)
SELECT 
    branch,
    product_name,
    TotalRevenue  
FROM RankedProduct
WHERE SaleRank = 1

-- How does the product category revenue split differ between branches?


WITH CategoryReveue AS (
    SELECT
    branch,
    product_category,
    SUM(quantity * unit_price) as TotalRevenue
    FROM sales.sales
    GROUP BY branch,product_category
), BranchTotalRevenue AS(
    SELECT
    branch,
    SUM(TotalRevenue) AS BranchRevenue
    FROM CategoryReveue
    GROUP BY branch

)

SELECT 
bt.branch,
cr.product_category,
cr.TotalRevenue,
bt.BranchRevenue,
(cr.TotalRevenue * 100.0 / bt.BranchRevenue) AS RevenuePercentage
FROM BranchTotalRevenue bt 
JOIN CategoryReveue cr ON Bt.branch = cr.branch
ORDER BY bt.branch,RevenuePercentage


-- .Which branch generates the most revenue from Members compared to Normal customers

WITH BranchCustomerRev AS (
    SELECT 
    branch,
    customer_type,
    SUM(quantity * unit_price) as TotalRevenue
    FROM sales.sales
    GROUP BY branch,customer_type
), BranchCustomerComparison AS (
    SELECT
    branch,
    MAX( CASE WHEN customer_type = 'Member' THEN TotalRevenue ELSE 0 END) AS MemberRevenue,
    MAX( CASE WHEN customer_type = 'Normal' THEN TotalRevenue ELSE 0 END) AS NormalRevenue
    FROM BranchCustomerRev
    GROUP BY branch
)
SELECT
branch,
MemberRevenue,
NormalRevenue,
 CASE 
        WHEN NormalRevenue = 0 THEN NULL
        ELSE MemberRevenue * 1.0 / NormalRevenue
    END AS RevenueRatio
FROM BranchCustomerComparison
ORDER BY MemberRevenue

-- What are the key drivers of revenue for the supermarket? (e.g., product category, branch, or customer type)

SELECT
branch,
product_category,
customer_type,
ROUND(SUM(unit_price*quantity),2) AS TotalRevenue,
ROUND(SUM(unit_price*quantity)*100/SUM(SUM(unit_price*quantity ))OVER() ,2) AS RevenuePercentage
FROM sales.sales
GROUP BY branch,product_category,customer_type
ORDER BY TotalRevenue DESC


-- Which customer group (Members/Normal) should the supermarket target for future promotions?

SELECT
customer_type,
SUM(total_price) AS TotalRevenue,
COUNT(sale_id) AS TotalTransaction,
SUM(total_price)/ COUNT(sale_id) AS CostPerTransaction,
SUM(reward_points) AS TotalPoints
FROM sales.sales
GROUP BY customer_type
ORDER BY TotalRevenue


-- Are there underperforming branches or product categories that require attention?

WITH BranchPerformance AS (
    SELECT
    branch,
    product_category,
    SUM(total_price) AS TotalRevenue,
    COUNT(sale_id) As TotalTransaction,
    SUM(total_price)/COUNT(sale_id) AS AvgRevenueTransaction,
    SUM(total_price) *100/ SUM(SUM(total_price)) OVER() AS RevenuePerTransaction

    FROM sales.sales
    GROUP BY branch,product_category
)
SELECT
branch,
product_category,
TotalRevenue,
TotalTransaction,
AvgRevenueTransaction,
RevenuePerTransaction,
CASE 
    WHEN RevenuePerTransaction < 10 THEN 'Underperforming'
    ELSE 'WellPerforming' END AS PerformingStatus
FROM BranchPerformance
ORDER BY 
    TotalRevenue ASC;


SELECT 
    customer_type,
    AVG(reward_points) AS AvgRewardPointsPerTransaction,
    SUM(reward_points) AS TotalRewardPoints,
    SUM(total_price) / NULLIF(SUM(reward_points), 0) AS RevenuePerRewardPoint,
    COUNT(DISTINCT sale_id) AS TotalTransactions
FROM 
    Sales.Sales
GROUP BY 
    customer_type
ORDER BY 
    TotalRewardPoints DESC;


SELECT 
    product_category,
    SUM(reward_points) AS TotalRewardPoints,
    SUM(total_price) AS TotalRevenue,
    SUM(total_price) / SUM(reward_points) AS RevenuePerRewardPoint
FROM 
    Sales.Sales
GROUP BY 
    product_category
ORDER BY 
    RevenuePerRewardPoint ASC;
